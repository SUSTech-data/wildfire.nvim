---
title: "ðŸ”¥Wildfire.nvim: Wildfire burns treesitterðŸŒ²"
format: gfm
---

A modern successor to [wildfire.vim](https://github.com/gcmt/wildfire.vim), empowered with the superpower of
treesitter. 

::: {layout="[[1],[1,1]]"}

[![Incremental and decremental selection](https://asciinema.org/a/TKD1XZ85IAtN0m5JwlvinRIZP.svg)](https://asciinema.org/a/TKD1XZ85IAtN0m5JwlvinRIZP)

![Accelerate selection with count prefix](assets/count.gif)

![Quick selection (leverage by treehopper)](assets/quick.gif)

:::

## Highlights
 
- âš¡ Smartly select the **inner** part of texts
- âš« **count prefix**
- ðŸŒ³ **Treesitter Integration**

## Motivation

I've found that treesitter's [`incremental_selection`](https://www.reddit.com/r/neovim/comments/r10llx/the_most_amazing_builtin_feature_nobody_ever/) is particularly handy for text selection. It often allows for selecting the desired text with fewer keystrokes compared to a well-configured wildfire.vim, all without the need to set up intricate text objects. 

However, since treesitter relies solely on AST for incremental selection, it tends to be overly **aggressive** for surrounds. In such case, I havt to revert to using text objects for selection, which is annoyed and tripped me up in practical use. 

On the other hand, treesitter doesn't support the `count prefix(vim.v.count)`, which can make it somewhat cumbersome when dealing with longer ranges. Its implementation is also a bit buggy, as you might select an area within the same range(see below).

> A picture is worth a thousand words 

![](assets/comp.gif)

## Usage

The useage is almost the same as [wildfire.vim](https://github.com/gcmt/wildfire.vim) and [`incremental_selection`](https://www.reddit.com/r/neovim/comments/r10llx/the_most_amazing_builtin_feature_nobody_ever/), You can check out their introduction to get a sense of it.

- {{< kbd CR >}} Init selection and do incremental selection if you have initilized (so just keep pressing {{< kbd CR >}}).
- {{< kbd BS >}} Decremental selection.
- {{< kbd NUM-CR >}} Accelerate selection with count prefix.


## Installation

```lua
{
    "sustech-data/wildfire.nvim",
    event = "VeryLazy",
    dependencies = { "nvim-treesitter/nvim-treesitter" },
    config = function()
        require("wildfire").setup()
    end,
}
```

## Configuration

This plugin is modified based on the official implementation of treesitter, so you can configure it in a very similar manner.

Currently you can only set unit width surround, refer to the default settings below.

```lua
{
    surrounds = {
        { "(", ")" },
        { "{", "}" },
        { "<", ">" },
        { "[", "]" },
    },
    keymaps = {
        init_selection = "<CR>",
        node_incremental = "<CR>",
        node_decremental = "<BS>",
    },
}
```
The quick selection havn't support natively, but you can try it out by

```lua
:lua require'wildfire'.init_selection()<CR>:lua require('tsht').nodes()<CR>
```

which is powered by [treehopper](https://github.com/mfussenegger/nvim-treehopper), [flash](https://github.com/folke/flash.nvim/tree/main) also provide similar things


## Roadmap

- [x] init with count prefix
- [ ] Native quick selection support
- [ ] Advanced surround support (Any length)
- [ ] Handle surround in node
